# Development Docker Compose file for Vapor Test API
#
# This file is optimized for development with hot reload
# and development-friendly settings.
#
version: '3.8'

volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: debug
  DATABASE_HOST: db
  DATABASE_NAME: vapor_database
  DATABASE_USERNAME: vapor_username
  DATABASE_PASSWORD: vapor_password
  
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_healthy
    ports:
      - '8080:8080'
    volumes:
      - .:/app
      - /app/.build
    restart: unless-stopped
    command: ["swift", "run", "App", "serve", "--env", "development", "--hostname", "0.0.0.0", "--port", "8080"]
    
  migrate:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_healthy
    command: ["swift", "run", "App", "migrate", "--yes"]
    deploy:
      replicas: 0
      
  revert:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      <<: *shared_environment
    depends_on:
      db:
        condition: service_healthy
    command: ["swift", "run", "App", "migrate", "--revert", "--yes"]
    deploy:
      replicas: 0
      
  db:
    image: postgres:15-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: vapor_username
      POSTGRES_PASSWORD: vapor_password
      POSTGRES_DB: vapor_database
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vapor_username -d vapor_database"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped 